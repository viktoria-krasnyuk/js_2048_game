{"version":3,"sources":["scripts/main.js"],"names":["board","gameField","document","querySelector","scoreGame","button","startMessage","winMessage","loseMessage","score","rows","columns","getNumber2048","setGame","r","c","tile","createElement","num","id","toString","updateTile","append","hasEmptyTile","get2048","getElementById","concat","innerText","classList","remove","setTwoOrFour","found","Math","random","floor","add","value","filterZero","row","filter","slide","slideRow","i","length","push","slideLeft","slideRight","reverse","slideUp","slideDown","lastMove","window","onload","addEventListener","e","contains","replace","code"],"mappings":"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","file":"main.8f3f05d7.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst gameField = document.querySelector('.game-field');\r\nconst scoreGame = document.querySelector('.game-score');\r\nconst button = document.querySelector('.button');\r\nconst startMessage = document.querySelector('.message-start');\r\nconst winMessage = document.querySelector('.message-win');\r\nconst loseMessage = document.querySelector('.message-lose');\r\n\r\nlet score = 0;\r\nconst rows = 4;\r\nconst columns = 4;\r\nlet getNumber2048 = false;\r\nlet board;\r\n\r\nwindow.onload = function() {\r\n  setGame();\r\n};\r\n\r\nfunction setGame() {\r\n  board = [\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n  ];\r\n\r\n  for (let r = 0; r < rows; r++) {\r\n    for (let c = 0; c < columns; c++) {\r\n      const tile = document.createElement('div');\r\n      const num = board[r][c];\r\n\r\n      tile.id = r.toString() + '-' + c.toString();\r\n      updateTile(tile, num);\r\n      gameField.append(tile);\r\n    }\r\n  }\r\n}\r\n\r\nbutton.addEventListener('click', e => {\r\n  if (button.classList.contains('start')) {\r\n    button.classList.replace('start', 'restart');\r\n    button.innerText = 'Restart';\r\n    startMessage.classList.add('hidden');\r\n\r\n    setTwoOrFour();\r\n    setTwoOrFour();\r\n  } else {\r\n    button.classList.replace('restart', 'start');\r\n    button.innerText = 'Start';\r\n    startMessage.classList.remove('hidden');\r\n    loseMessage.classList.add('hidden');\r\n\r\n    board = [\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n    ];\r\n\r\n    for (let r = 0; r < rows; r++) {\r\n      for (let c = 0; c < columns; c++) {\r\n        const tile = document.getElementById(`${r}-${c}`);\r\n\r\n        tile.innerText = '';\r\n        tile.classList.value = '';\r\n        tile.classList.add('field-cell');\r\n\r\n        winMessage.classList.add('hidden');\r\n      }\r\n    }\r\n\r\n    score = 0;\r\n    scoreGame.innerText = score;\r\n  }\r\n});\r\n\r\nfunction hasEmptyTile() {\r\n  for (let r = 0; r < rows; r++) {\r\n    for (let c = 0; c < columns; c++) {\r\n      if (board[r][c] === 0) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction get2048() {\r\n  for (let r = 0; r < rows; r++) {\r\n    for (let c = 0; c < columns; c++) {\r\n      const tile = document.getElementById(`${r}-${c}`);\r\n\r\n      if (tile.innerText === '2048') {\r\n        getNumber2048 = true;\r\n        winMessage.classList.remove('hidden');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction setTwoOrFour() {\r\n  if (!hasEmptyTile()) {\r\n    return;\r\n  }\r\n\r\n  let found = false;\r\n\r\n  while (!found) {\r\n    const num = Math.random() < 0.1 ? 4 : 2;\r\n    const r = Math.floor(Math.random() * rows);\r\n    const c = Math.floor(Math.random() * columns);\r\n\r\n    if (board[r][c] === 0) {\r\n      board[r][c] = num;\r\n      found = true;\r\n\r\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\r\n\r\n      tile.innerText = num; ;\r\n      tile.classList.add('field-cell--' + num.toString());\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateTile(tile, num) {\r\n  tile.innerText = '';\r\n  tile.classList.value = '';\r\n  tile.classList.add('field-cell');\r\n\r\n  if (num > 0) {\r\n    tile.innerText = num;\r\n\r\n    if (num <= 2048) {\r\n      tile.classList.add('field-cell--' + num.toString());\r\n    }\r\n  }\r\n}\r\n\r\ndocument.addEventListener('keyup', (e) => {\r\n  if (getNumber2048) {\r\n    return;\r\n  }\r\n\r\n  if (e.code === 'ArrowLeft') {\r\n    slideLeft();\r\n    setTwoOrFour();\r\n  } else if (e.code === 'ArrowRight') {\r\n    slideRight();\r\n    setTwoOrFour();\r\n  } else if (e.code === 'ArrowUp') {\r\n    slideUp();\r\n    setTwoOrFour();\r\n  } else if (e.code === 'ArrowDown') {\r\n    slideDown();\r\n    setTwoOrFour();\r\n  }\r\n\r\n  scoreGame.innerText = score;\r\n\r\n  get2048();\r\n\r\n  if (!lastMove() && !hasEmptyTile()) {\r\n    loseMessage.classList.remove('hidden');\r\n  }\r\n});\r\n\r\nfunction filterZero(row) {\r\n  return row.filter(num => num !== 0);\r\n}\r\n\r\nfunction slide(row) {\r\n  let slideRow = row;\r\n\r\n  slideRow = filterZero(slideRow);\r\n\r\n  for (let i = 0; i < slideRow.length; i++) {\r\n    if (slideRow[i] === slideRow[i + 1]) {\r\n      slideRow[i] *= 2;\r\n      slideRow[i + 1] = 0;\r\n      score += slideRow[i];\r\n    }\r\n  }\r\n\r\n  slideRow = filterZero(slideRow);\r\n\r\n  while (slideRow.length < columns) {\r\n    slideRow.push(0);\r\n  }\r\n\r\n  return slideRow;\r\n}\r\n\r\nfunction slideLeft() {\r\n  for (let r = 0; r < rows; r++) {\r\n    let row = board[r];\r\n\r\n    row = slide(row);\r\n    board[r] = row;\r\n\r\n    for (let c = 0; c < columns; c++) {\r\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\r\n      const num = board[r][c];\r\n\r\n      updateTile(tile, num);\r\n    }\r\n  }\r\n}\r\n\r\nfunction slideRight() {\r\n  for (let r = 0; r < rows; r++) {\r\n    let row = board[r];\r\n\r\n    row.reverse();\r\n    row = slide(row);\r\n    board[r] = row.reverse();\r\n\r\n    for (let c = 0; c < columns; c++) {\r\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\r\n      const num = board[r][c];\r\n\r\n      updateTile(tile, num);\r\n    }\r\n  }\r\n}\r\n\r\nfunction slideUp() {\r\n  for (let c = 0; c < columns; c++) {\r\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\r\n\r\n    row = slide(row);\r\n\r\n    for (let r = 0; r < rows; r++) {\r\n      board[r][c] = row[r];\r\n\r\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\r\n      const num = board[r][c];\r\n\r\n      updateTile(tile, num);\r\n    }\r\n  }\r\n}\r\n\r\nfunction slideDown() {\r\n  for (let c = 0; c < columns; c++) {\r\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\r\n\r\n    row.reverse();\r\n    row = slide(row);\r\n    row.reverse();\r\n\r\n    for (let r = 0; r < rows; r++) {\r\n      board[r][c] = row[r];\r\n\r\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\r\n      const num = board[r][c];\r\n\r\n      updateTile(tile, num);\r\n    }\r\n  }\r\n}\r\n\r\nfunction lastMove() {\r\n  for (let r = 0; r < rows; r++) {\r\n    for (let c = 1; c < columns; c++) {\r\n      if (board[r][c - 1] === board[r][c]) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let c = 0; c < columns; c++) {\r\n    for (let r = 1; r < rows; r++) {\r\n      if (board[r - 1][c] === board[r][c]) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n"]}